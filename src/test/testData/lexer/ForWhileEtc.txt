AwkTokenType.BEGIN ('BEGIN')
WHITE_SPACE (' ')
AwkTokenType.{ ('{')
AwkTokenType.NEWLINE ('\n')
WHITE_SPACE ('    ')
AwkTokenType.for ('for')
AwkTokenType.( ('(')
AwkTokenType.; (';')
AwkTokenType.; (';')
AwkTokenType.) (')')
WHITE_SPACE (' ')
AwkTokenType.{ ('{')
WHITE_SPACE (' ')
AwkTokenType.} ('}')
AwkTokenType.NEWLINE ('\n')
WHITE_SPACE ('    ')
AwkTokenType.while ('while')
AwkTokenType.( ('(')
AwkTokenType.NUMBER ('1')
AwkTokenType.) (')')
WHITE_SPACE (' ')
AwkTokenType.{ ('{')
WHITE_SPACE (' ')
AwkTokenType.} ('}')
AwkTokenType.NEWLINE ('\n')
WHITE_SPACE ('    ')
AwkTokenType.print ('print')
AwkTokenType.( ('(')
AwkTokenType.STRING ('""')
AwkTokenType.) (')')
AwkTokenType.NEWLINE ('\n')
WHITE_SPACE ('    ')
AwkTokenType.printf ('printf')
AwkTokenType.( ('(')
AwkTokenType.STRING ('""')
AwkTokenType.) (')')
AwkTokenType.NEWLINE ('\n')
WHITE_SPACE ('    ')
AwkTokenType.exit ('exit')
AwkTokenType.( ('(')
AwkTokenType.NUMBER ('1')
AwkTokenType.) (')')
AwkTokenType.NEWLINE ('\n')
AwkTokenType.} ('}')
AwkTokenType.NEWLINE ('\n')
AwkTokenType.function ('function')
WHITE_SPACE (' ')
AwkTokenType.FUNC_NAME ('f')
AwkTokenType.( ('(')
AwkTokenType.) (')')
WHITE_SPACE (' ')
AwkTokenType.{ ('{')
AwkTokenType.return ('return')
AwkTokenType.( ('(')
AwkTokenType.NUMBER ('1')
AwkTokenType.) (')')
AwkTokenType.} ('}')